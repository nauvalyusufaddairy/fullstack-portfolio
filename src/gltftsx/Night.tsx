/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 night.glb -t 
Author: ABOD.ANIMATION (https://sketchfab.com/body3d2005)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/earth-c2e4294c32ea4d8b850e152fc26aeeb4
Title: earth
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { OrbitControls, useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
type ActionName = 'Animation'
interface GLTFAction extends THREE.AnimationClip {
  name: ActionName
}
type GLTFResult = GLTF & {
  nodes: {
    Sphere_Material001_0: THREE.Mesh
  }
  materials: {
    ['Material.001']: THREE.MeshStandardMaterial
  }
  animations: GLTFAction[]
}

type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>>

export function Night(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/night.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <group scale={0.01}>
        <pointLight position={[1, 1, -2]} power={28} />
        <ambientLight intensity={20} />
        <OrbitControls autoRotate enableZoom={false} maxPolarAngle={Math.PI} minPolarAngle={Math.PI / 2} />
        <mesh geometry={nodes.Sphere_Material001_0.geometry} material={materials['Material.001']} rotation={[-Math.PI / 2, 0, -0.262]} scale={100} />
      </group>
    </group>
  )
}

useGLTF.preload('/night.glb')
