/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 globe.glb -t 
Author: matousekfoto (https://sketchfab.com/matousekfoto)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/toy-paper-globe-4ac8d8da60324fcfb7229f7604f02022
Title: Toy paper Globe
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Model_material3_0: THREE.Mesh
    Model_material1_0: THREE.Mesh
    Model_material0_0: THREE.Mesh
    Model_material2_0: THREE.Mesh
  }
  materials: {
    material3: THREE.MeshBasicMaterial
    material1: THREE.MeshBasicMaterial
    material0: THREE.MeshBasicMaterial
    material2: THREE.MeshBasicMaterial
  }
  animations: any
}

type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>>

export function Globe(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/globe.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <group rotation={[-Math.PI / 2, 0, 0]} scale={0.143}>
        <group rotation={[-Math.PI, 0, 0]}>
          <mesh geometry={nodes.Model_material3_0.geometry} material={materials.material3} />
          <mesh geometry={nodes.Model_material1_0.geometry} material={materials.material1} />
          <mesh geometry={nodes.Model_material0_0.geometry} material={materials.material0} />
          <mesh geometry={nodes.Model_material2_0.geometry} material={materials.material2} />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/globe.glb')
